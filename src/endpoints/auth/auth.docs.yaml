/auth/register:
  post:
    summary: Register a new user
    tags: 
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                minLength: 2
                example: 'Ram Mahendran'
              email:
                type: string
                format: email
                example: 'ram.mahendran@example.com'
              password:
                type: string
                minLength: 6
                example: 'securepassword'
              role:
                type: string
                enum: [admin, manager, employee]
                example: 'admin'
            required:
              - name
              - email
              - password
              - role
    responses:
      '201':
        description: User registered successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'User registered successfully'
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      msg:
                        type: string
                        example: 'Email is required'

/auth/login:
  post:
    summary: Login a user
    tags: 
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                example: 'ram.mahendran@example.com'
              password:
                type: string
                minLength: 6
                example: 'securepassword'
            required:
              - email
              - password
    responses:
      '200':
        description: Login successful
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Login successful'
                token:
                  type: string
                  example: 'your_jwt_token'
      '401':
        description: Invalid credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Invalid credentials'

/auth/logout:
  post:
    summary: Logout a user
    tags: 
      - Auth
    security:
      - bearerAuth: []
    responses:
      '200':
        description: User logged out successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'User logged out successfully'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Unauthorized access'
